import mongoose, { Document, Schema } from 'mongoose';

export interface IExport extends Document {
    userId: mongoose.Types.ObjectId;
    projectId: mongoose.Types.ObjectId;
    exportId: string; // Unique ID for the export job, generated by uuid
    format: 'csv' | 'json' | 'excel' | 'xml';
    status: 'pending' | 'in-progress' | 'completed' | 'failed';
    filePath?: string; // Path to the completed export file
    progress: number; // 0-100
    recordCount: number;
    fileSize: number; // in bytes
    createdAt: Date;
    updatedAt: Date;
    error?: string;
}

const ExportSchema: Schema = new Schema({
    userId: { type: Schema.Types.ObjectId, ref: 'User', required: true },
    projectId: { type: Schema.Types.ObjectId, ref: 'Project', required: true },
    exportId: { type: String, required: true, unique: true },
    format: { type: String, required: true, enum: ['csv', 'json', 'excel', 'xml'] },
    status: { type: String, required: true, enum: ['pending', 'in-progress', 'completed', 'failed'], default: 'pending' },
    filePath: { type: String },
    progress: { type: Number, required: true, default: 0 },
    recordCount: { type: Number, default: 0 },
    fileSize: { type: Number, default: 0 },
    error: { type: String },
}, { timestamps: true });

const Export = mongoose.model<IExport>('Export', ExportSchema);

export default Export;